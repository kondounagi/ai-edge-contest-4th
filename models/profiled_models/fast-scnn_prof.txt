Timer unit: 1e-06 s

Total time: 0.035818 s
File: /home/hisadome/ai_edge/Fast-SCNN-pytorch/models/fast_scnn.py
Function: forward at line 32

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    32                                               @profile
    33                                               def forward(self, x):
    34         1         10.0     10.0      0.0          size = x.size()[2:]
    35         1       4952.0   4952.0     13.8          higher_res_features = self.learning_to_downsample(x)
    36         1      25203.0  25203.0     70.4          x = self.global_feature_extractor(higher_res_features)
    37         1        799.0    799.0      2.2          x = self.feature_fusion(higher_res_features, x)
    38         1        700.0    700.0      2.0          x = self.classifier(x)
    39         1          1.0      1.0      0.0          outputs = []
    40         1       4143.0   4143.0     11.6          x = F.interpolate(x, size, mode='bilinear', align_corners=True)
    41         1          4.0      4.0      0.0          outputs.append(x)
    42         1          3.0      3.0      0.0          if self.aux:
    43                                                       auxout = self.auxlayer(higher_res_features)
    44                                                       auxout = F.interpolate(auxout, size, mode='bilinear', align_corners=True)
    45                                                       outputs.append(auxout)
    46         1          3.0      3.0      0.0          return tuple(outputs)

Total time: 7.09968 s
File: demo.py
Function: demo at line 29

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    29                                           @profile
    30                                           def demo():
    31         1     236669.0 236669.0      3.3      device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
    32                                               # output folder
    33         1       1414.0   1414.0      0.0      if not os.path.exists(args.outdir):
    34                                                   os.makedirs(args.outdir)
    35                                           
    36                                               # image transform
    37         1          4.0      4.0      0.0      transform = transforms.Compose([
    38         1          2.0      2.0      0.0          transforms.ToTensor(),
    39         1         19.0     19.0      0.0          transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),
    40                                               ])
    41         1     188796.0 188796.0      2.7      image = Image.open(args.input_pic).convert('RGB')
    42         1    6325821.0 6325821.0     89.1      image = transform(image).unsqueeze(0).to(device)
    43         1     199259.0 199259.0      2.8      model = get_fast_scnn(args.dataset, pretrained=True, root=args.weights_folder, map_cpu=args.cpu).to(device)
    44         1        281.0    281.0      0.0      print('Finished loading model!')
    45         1       1447.0   1447.0      0.0      model.eval()
    46         1          6.0      6.0      0.0      with torch.no_grad():
    47         1      35919.0  35919.0      0.5          outputs = model(image)
    48         1      18213.0  18213.0      0.3      pred = torch.argmax(outputs[0], 1).squeeze(0).cpu().data.numpy()
    49         1       3034.0   3034.0      0.0      mask = get_color_pallete(pred, args.dataset)
    50         1         41.0     41.0      0.0      outname = os.path.splitext(os.path.split(args.input_pic)[-1])[0] + '.png'
    51         1      88754.0  88754.0      1.3      mask.save(os.path.join(args.outdir, outname))

